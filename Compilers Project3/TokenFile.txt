1	program		1	0
1	test		100	0
1	(		67	67
1	input		100	0
1	,		59	59
1	output		100	0
1	)		68	68
1	;		69	69
2	var		2	0
2	a		100	0
2	:		64	64
2	integer		21	20
2	;		69	69
3	var		2	0
3	b		100	0
3	:		64	64
3	real		22	20
3	;		69	69
4	var		2	0
4	c		100	0
4	:		64	64
4	array		3	0
4	[		65	65
4	1		20	21
4	..		61	61
4	2		20	21
4	]		66	66
4	of		4	0
4	integer		21	20
4	;		69	69
6	procedure		6	0
6	proc1		100	0
6	(		67	67
6	x		100	0
6	:		64	64
6	integer		21	20
6	;		69	69
6	y		100	0
6	:		64	64
6	real		22	20
6	;		69	69
7	z		100	0
7	:		64	64
7	array		3	0
7	[		65	65
7	1		20	21
7	..		61	61
7	2		20	21
7	]		66	66
7	of		4	0
7	integer		21	20
7	;		69	69
7	q		100	0
7	:		64	64
7	real		22	20
7	)		68	68
7	;		69	69
8	var		2	0
8	d		100	0
8	:		64	64
8	integer		21	20
8	;		69	69
9	begin		7	0
10	a		100	0
10	:=		63	63
10	2		20	21
10	;		69	69
11	z		100	0
11	[		65	65
11	a		100	0
11	]		66	66
11	:=		63	63
11	4		20	21
11	;		69	69
12	c		100	0
12	[		65	65
12	3		20	21
12	]		66	66
12	:=		63	63
12	3		20	21
13	end		8	0
13	;		69	69
15	procedure		6	0
15	proc2		100	0
15	(		67	67
15	x		100	0
15	:		64	64
15	integer		21	20
15	;		69	69
15	y		100	0
15	:		64	64
15	integer		21	20
15	)		68	68
15	;		69	69
16	var		2	0
16	e		100	0
16	:		64	64
16	real		22	20
16	;		69	69
18	procedure		6	0
18	proc3		100	0
18	(		67	67
18	n		100	0
18	:		64	64
18	integer		21	20
18	;		69	69
18	z		100	0
18	:		64	64
18	real		22	20
18	)		68	68
18	;		69	69
19	var		2	0
19	e		100	0
19	:		64	64
19	integer		21	20
19	;		69	69
21	procedure		6	0
21	proc4		100	0
21	(		67	67
21	a		100	0
21	:		64	64
21	integer		21	20
21	;		69	69
21	z		100	0
21	:		64	64
21	array		3	0
21	[		65	65
21	1		20	21
21	..		61	61
21	3		20	21
21	]		66	66
21	of		4	0
21	real		22	20
21	)		68	68
21	;		69	69
22	var		2	0
22	x		100	0
22	:		64	64
22	integer		21	20
22	;		69	69
23	begin		7	0
24	a		100	0
24	:=		63	63
24	e		100	0
25	end		8	0
25	;		69	69
27	begin		7	0
28	a		100	0
28	:=		63	63
28	e		100	0
28	;		69	69
29	e		100	0
29	:=		63	63
29	c		100	0
29	[		65	65
29	e		100	0
29	]		66	66
30	end		8	0
30	;		69	69
32	begin		7	0
33	call		5	0
33	proc1		100	0
33	(		67	67
33	x		100	0
33	,		59	59
33	e		100	0
33	,		59	59
33	c		100	0
33	,		59	59
33	b		100	0
33	)		68	68
33	;		69	69
34	call		5	0
34	proc3		100	0
34	(		67	67
34	c		100	0
34	[		65	65
34	1		20	21
34	]		66	66
34	,		59	59
34	e		100	0
34	)		68	68
34	;		69	69
35	e		100	0
35	:=		63	63
35	e		100	0
35	+		40	41
35	4		20	21
35	;		69	69
36	a		100	0
36	:=		63	63
36	(		67	67
36	a		100	0
36	mod		30	34
36	4.0		20	22
36	)		68	68
36	div		30	33
36	x		100	0
36	;		69	69
37	while		12	0
37	(		67	67
37	(		67	67
37	a		100	0
37	<=		50	54
37	4.0		20	22
37	)		68	68
37	and		30	35
37	(		67	67
37	(		67	67
37	b		100	0
37	>=		50	56
37	e		100	0
37	)		68	68
38	or		40	43
38	(		67	67
38	not		14	0
38	(		67	67
38	a		100	0
38	=		50	51
38	c		100	0
38	[		65	65
38	a		100	0
38	]		66	66
38	)		68	68
38	)		68	68
38	)		68	68
38	)		68	68
38	do		13	0
39	begin		7	0
40	a		100	0
40	:=		63	63
40	c		100	0
40	[		65	65
40	a		100	0
40	]		66	66
40	+		40	41
40	1		20	21
41	end		8	0
42	end		8	0
42	;		69	69
44	begin		7	0
45	call		5	0
45	proc2		100	0
45	(		67	67
45	c		100	0
45	[		65	65
45	4		20	21
45	]		66	66
45	,		59	59
45	c		100	0
45	[		65	65
45	5		20	21
45	]		66	66
45	)		68	68
45	;		69	69
46	call		5	0
46	proc2		100	0
46	(		67	67
46	c		100	0
46	[		65	65
46	4		20	21
46	]		66	66
46	,		59	59
46	2		20	21
46	)		68	68
46	;		69	69
47	call		5	0
47	proc2		100	0
47	(		67	67
47	c		100	0
47	[		65	65
47	4		20	21
47	]		66	66
47	)		68	68
47	;		69	69
48	call		5	0
48	proc2		100	0
48	(		67	67
48	c		100	0
48	[		65	65
48	4		20	21
48	]		66	66
48	,		59	59
48	2		20	21
48	,		59	59
48	3		20	21
48	)		68	68
48	;		69	69
49	call		5	0
49	proc2		100	0
49	(		67	67
49	c		100	0
49	,		59	59
49	2		20	21
49	)		68	68
49	;		69	69
50	call		5	0
50	proc2		100	0
50	;		69	69
51	call		5	0
51	proc3		100	0
51	(		67	67
51	c		100	0
51	[		65	65
51	4		20	21
51	]		66	66
51	,		59	59
51	2		20	21
51	)		68	68
51	;		69	69
52	if		9	0
52	(		67	67
52	a		100	0
52	<		50	53
52	2		20	21
52	)		68	68
52	then		10	0
52	a		100	0
52	:=		63	63
52	1		20	21
52	else		11	0
52	a		100	0
52	:=		63	63
52	a		100	0
52	+		40	41
52	2		20	21
52	;		69	69
53	if		9	0
53	(		67	67
53	b		100	0
53	>		50	55
53	4		20	21
53	)		68	68
53	then		10	0
53	a		100	0
53	:=		63	63
53	c		100	0
53	[		65	65
53	a		100	0
53	]		66	66
54	end		8	0
54	.		62	62
55	EOF		15	15
